/**
 * @overview generated by ghoti-cli
 * @fileoverview webpack server configs
 */

const path = require('path');
const webpack = require('webpack');
const UglifyJSPlugin = require('uglifyjs-webpack-plugin');
const CopyWebpackPlugin = require('copy-webpack-plugin');
const ExtractTextWebpackPlugin = require('extract-text-webpack-plugin');

const BUILD_DIR = path.resolve(__dirname, 'dist', 'server');
const APP_DIR = path.resolve(__dirname, 'render');
const FAVICON_DIR = path.resolve(__dirname, 'public', 'favicon.png');

let config = {
    entry: APP_DIR + "/service.ts",
    target: 'node',
    node: {
        __filename: false,
        __dirname: false
    },
    output: {
        filename: "bundle.js",
        path: BUILD_DIR
    },
    resolve: {
        extensions: [".ts", ".tsx", ".js", ".json", ".css", ".sass", ".png"]
    },
    module: {
        rules: [{
                test: /\.tsx?$/,
                use: [{
                    loader: 'awesome-typescript-loader',
                    options: {
                        configFileName: './tsconfig.json'
                    }
                }]
            },
            {
                test: /\.sass$/,
                use: ExtractTextWebpackPlugin.extract('css-loader?sourceMap!sass-loader?sourceMap')
            }, {
                test: /\.(jpg|png|gif|webp|ico)$/,
                loader: 'url-loader?limit=8192'
            }
        ]
    },
    plugins: [
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'production')
        }),
        new CopyWebpackPlugin([{
            from: FAVICON_DIR,
            to: BUILD_DIR,
        }, {
            from: LITEJS_DIR,
            to: BUILD_DIR,
        }], {}),
        new ExtractTextWebpackPlugin("bundle.css"),
        new UglifyJSPlugin()
    ]
};

module.exports = config;